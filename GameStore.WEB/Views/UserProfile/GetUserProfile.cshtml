@model UserProfileModel
@{
    ViewData["Title"] = $"Профиль - {User.Identity.Name}";
    PredefinedManager pd = new();
    bool isUser = User.IsInRole(pd.AppRole.user.Name);
}

@section js
{
    <script src="~/js/UserProfileScripts/UserProfileScript.js"></script>
    <script src="~/js/UserProfileScripts/showGameKey.js"></script>

    <script>

        // ШАГ 1. НАСТРОЙКА ОБЩЕГО ПОВЕДЕНИЯ МОДАЛОК
        $(document).ready(function () {
            //НАСТРОЙКА ПОВЕДЕНИЯ МОДАЛОК - Алерты
            AddHandlerClickForButtonsOfActionModals('modalEditUserProfileData', 'profile');

            //НАСТРОЙКА ПОВЕДЕНИЯ МОДАЛОК: Setting modal Create & Edit
            AddHandlerShownModalForCreateEditModal("modalEditUserProfileData", "editUserDataForm");

            ShowGameKey();
        });
        // ШАГ 2. НАСТРОЙКА МАРШРУТОВ
        function GetURLForAjaxByActionType(actionType) {
            var url = "";
            switch (actionType) {
                case "edit":
                    url = '@Url.Action("GetPartialWorkOnData", "UserProfile")';
                    break;
                case "delete":
                    url = '@Url.Action("DeleteUserAccount", "UserProfile")';
                    break;
            }
            return url;
        }
        // ШАГ 3. ВЫЗОВ ДОПОЛНИТЕЛЬНЫХ ФУНКЦИЙ В ГЛАВНОМ AJAX МЕТОДЕ
        function SettingBehaviorOfModalWindow(boxId, section) {

            if (section == "userdata") {
                //Превью аватара
                PreviewAvatar();
            }
            else if (section == "changePass") {

            }

        }

        //Превью аватара
        function PreviewAvatar() {
            const avatarInput = $('#uploadAvarar');
            const avatarNameInput = $('#AppUser_AvatarName');
            const avatarPreview = $('#avatarPreview-js');
            avatarInput.on('change', (e) => {
                const file = avatarInput[0].files[0];
                const reader = new FileReader();

                reader.onload = (event) => {
                    const imageDataUrl = event.target.result;
                    const img = $('<img >').attr('src', imageDataUrl);
                    img.css({ 'border-radius': '50%', 'border': '1px solid black' });
                    avatarPreview.empty().append(img);

                    // Fill in the image name automatically
                    const fileName = file.name;
                    avatarNameInput.val(fileName);
                };

                reader.readAsDataURL(file);
            });
        }

        function GetUrlForShowGameGey()
        {
            return'@Url.Action("GetGameKey", "UserProfile")'
        }
    </script>
}
<div class="row">
    @*  USER DATA *@
    <div class="col">
        <input asp-for="AppUser.Email" hidden />
        <div class="avatar">
            @if (Model.AppUser.AvatarImage.Length == 0)
            {
                @*  Аватар пользователя по умолчанию *@
                <img src="~/img/useravatars/user.jpg" alt="user.jpg" class="rounded-circle" />
            }
            else
            {
                @Html.Raw("<img class='rounded-circle' src=\"data:image/jpeg;base64,"
                         + Convert.ToBase64String(Model.AppUser.AvatarImage) + "\" />")
            }

        </div>

        <div calss="userinfo">
            <div class="userdata d-flex">
                <p class="h5 mt-1 me-3">Баланс: @Model.AppUser.Balance BYN</p>
                <a class="btn btn-outline-success" asp-action="AccountRefill" asp-controller="UserProfile">Пополнить</a>
            </div>
            <div class="userdata">
                <h4>@Model.AppUser.CustomUserName</h4>
                <h6><em>@Model.AppUser.Email</em></h6>
                <button type="button" data-section="userdata" data-action="edit" class="btn btn-outline-primary js-btn">Редактировать учетные данные</button>
            </div>
            <div class="userdata">
                <h5>Дополнительные функции</h5>
                <div class="btn-group-vertical mt-2">
                    <div class="mt-1">
                        @if (Model.AppUser.EmailConfirmed is false)
                        {
                            <a asp-area="" asp-controller="UserProfile" asp-action="ConfirmEmailStepOne" class="btn btn-warning" data-bs-toggle="tooltip" data-bs-placement="right" title="Вы подтверждаете, что имеете доступ к этому Email">Подтвердить почту</a>
                        }
                        else
                        {
                            <a asp-area="" asp-controller="UserProfile" asp-action="UnlinkEmail" class="btn btn-danger" data-bs-toggle="tooltip" data-bs-placement="right" title="Вы подтверждаете, что хотите отвязать Email (Так же он автоматически отвяжется, если вы смените Email)">Отвязать почту</a>
                        }
                    </div>

                    <div class="mt-2">
                        @if (Model.AppUser.TwoFactorEnabled is false)
                        {
                            <a asp-area="" asp-controller="UserProfile" asp-action="TwoFactorManager" asp-route-isEndable="true" class="btn btn-warning" data-bs-toggle="tooltip" data-bs-placement="right" title="Двухфакторная проверка подлинности (2FA). Позволяет обеспечить дополнительную защиту Вашего аккаунта (Для включения этой функции, нужно сначала подтвердить Email)">Включить 2FA</a>
                        }
                        else
                        {
                            <a asp-area="" asp-controller="UserProfile" asp-action="TwoFactorManager" asp-route-isEndable="false" class="btn btn-danger" data-bs-toggle="tooltip" data-bs-placement="right" title="Выключение 2FA влечет за собой угрозу безопасности Вашего аккаунта">Выключить 2FA</a>
                        }
                    </div>

                    <div class="mt-2">
                        <button type="button" data-section="changePass" data-action="edit" class="btn btn-outline-primary js-btn">Сменить пароль</button>
                    </div>

                    @if (isUser is true)
                    {
                        <div class="mt-2">
                            <button type="button" data-section="deleteAccount" data-action="delete" class="btn btn-outline-danger js-btn" data-bs-toggle="tooltip" data-bs-placement="right" title="После удаление аккаунта Вы потеряете все свои данные.">Удалить аккаунт</button>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
    @*     ORDER DATA *@
    <div class="col">
        <h2>История покупок (последние 5 покупок)</h2>

        @if (Model.ShoppingCarts is not null && Model.ShoppingCarts.Count >0)
        {
            @await Html.PartialAsync("_Partial.GetUserProfile.HistoryOrders", Model)

            <div class="row mt-3">
                <a asp-area="" asp-controller="UserProfile" asp-action="HistoryOrders" class="btn btn-lg btn-outline-primary">Просмотреть всю историю покупок</a>
            </div>

            <div class="row mt-3">
             
            </div>
        }
        else
        {
            <h4>Вы еще ничего не покупали ((</h4>
        }


    </div>
</div>

<div id="modalWrapper">
</div>

<div id="modalActionWrapper">
    @await Html.PartialAsync("_Partial.Action.DataNotSaved")
    @await Html.PartialAsync("_Partial.Action.Warning")
    @await Html.PartialAsync("_Partial.Action.Success")
    @await Html.PartialAsync("_Partial.Action.Error")
</div>

<div id="lastActionDataWrapper">
    @await Html.PartialAsync("_Partial.ActionResult", Model.LastAction)
</div>
