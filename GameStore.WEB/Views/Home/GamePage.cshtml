@model SingleGamePageModel

@{
    ViewData["Title"] = (Model.Game is null) ? Model.ErrorVM.Title : Model.Game.Name;
    string nodata = "Нет данных";
}

@section js {
    <script src="~/js/shoppingcart/shopcart.js"></script>
    <script src="~/js/gamepage/review.js"></script>
    <script src="~/js/companets.js"></script>
    <script>
        // ШАГ 1. НАСТРОЙКА ОБЩЕГО ПОВЕДЕНИЯ МОДАЛОК
        $(document).ready(function () {
            //НАСТРОЙКА ПОВЕДЕНИЯ МОДАЛОК - Алерты
            AddHandlerClickForButtonsOfActionModals('modalAddToShoppingCart', 'addToShoppingCart');

            //НАСТРОЙКА ПОВЕДЕНИЯ МОДАЛОК: Setting modal Create & Edit
            AddHandlerShownModalForCreateEditModal("modalAddToShoppingCart", "addToShoppingCartForm");
            AddToShpCrt();
            LoadGamePlatforms();
            LoadGameGenres();
            LoadGameLables();
            LoadGameScreens();
            ToggleLoadingView(true);
            AjaxActionGetGameReviews(pageNumber, pageSize);
        });

        // ШАГ 2. НАСТРОЙКА МАРШРУТОВ
        function GetURLForAjaxByActionType(actionType) {
            var url = "";
            switch (actionType) {
                case "edit":
                    url = '@Url.Action("GetPartialWorkOnData", "Home")';
                    break;
                case "getPlatforms":
                    url = '@Url.Action("GetGamePlatforms", "Home")';
                    break;
                case "getGenres":
                    url = '@Url.Action("GetGameGenres", "Home")';
                    break;
                case "getLables":
                    url = '@Url.Action("GetGameLables", "Home")';
                    break;
                case "getScreens":
                    url = '@Url.Action("GetGameScreens", "Home")';
                    break;
                case "review":
                    url = '@Url.Action("CreateReviewGame", "Home")';
                    break;
                case "showReview":
                    url = '@Url.Action("GetGameReviews", "Home")';
                    break;
                case "editReview":
                    url = '@Url.Action("GetModalForEditReview", "Home")';
                    break;  
                case "elasticRemove":
                    url = '@Url.Action("ElasticRemoveReview", "Home")';
                    break;
            }
            return url;
        }

        // ШАГ 3. ВЫЗОВ ДОПОЛНИТЕЛЬНЫХ ФУНКЦИЙ В ГЛАВНОМ AJAX МЕТОДЕ
        function SettingBehaviorOfModalWindow(boxId, section) { }

        $("#showvideo").off("click").on("click", function () {
            $("#modalGameVideo").modal("show");
        });

        function LoadGamePlatforms(){
           var sectionForUrl = "getPlatforms";
           var sectionData = "js-game-platforms";
           AjaxActionGetOtherGameData(sectionForUrl, sectionData);
        }

        function LoadGameGenres(){
           var sectionForUrl = "getGenres";
           var sectionData = "js-game-genres";
           AjaxActionGetOtherGameData(sectionForUrl, sectionData);
        }

        function LoadGameLables(){
           var sectionForUrl = "getLables";
           var sectionData = "js-game-lables";
           AjaxActionGetOtherGameData(sectionForUrl, sectionData);
        }

        function LoadGameScreens(){
           var sectionForUrl = "getScreens";
           var sectionData = "js-game-screens";
           AjaxActionGetOtherGameData(sectionForUrl, sectionData);
        }

        function AjaxActionGetOtherGameData(sectionForUrl, sectionData)
        {
            var gameId = $('#Game_Id').val();
            var url = GetURLForAjaxByActionType(sectionForUrl);

             $.ajax({
                cache: false,
                type: "GET",
                url: url,
                data: {gameId: gameId},
                dataType: "html",
                success: function (data) {
                    $('.'+sectionData).empty().append(data);
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    alert('Ошибка загрузки модального окна!!!');
                }
            });
        }

    </script>

}


<div class="row mt-5 mb-3">
    <input readonly asp-for="Game.Id" hidden />
    <input readonly id="js-userEmail" value="@User.Identity.Name" hidden />
    <div class="col-md-3">
        <div class="gamePageMainInfo singlegame-area borderS p-2 text-center ">
            <div class="">
                <h4>@Model.Game.Name</h4>
            </div>

            <div>
                @Html.Raw("<img  src=\"data:image/png;base64,"
                         + Convert.ToBase64String(Model.Game.Poster) + "\" />")
            </div>

            <div class="mt-2">
                <button type="button" id="showvideo" class="btn btn-outline-primary btn-lg">
                    <i class="fa-solid fa-play"></i>
                    Смотреть трейлер
                </button>
            </div>
            <div class="d-flex flex-wrap  h5 mt-2">

                <div class="m-1 p-1 h4">


                    @if (Model.Game.IsShare is true)
                    {
                        <s> @Model.Game.Price</s>  @Model.Game.SharePrice
                    }
                    else
                    {
                        @((Model.IsCanAddToShoppCart is true) ? Model.Game.Price : "")
                    }
                    @((Model.IsCanAddToShoppCart is true) ? "BYN" : "")
                </div>

                @if (User.Identity.IsAuthenticated)
                {
                    <div class="btn-group mx-auto mb-3  float-end btn-lg">
                        <button type="button" class="btn btn-outline-primary btn-lg" data-bs-toggle="tooltip" data-bs-placement="right" title="Добавить в список желаемого"><i class="fas fa-star"></i></button>
                        @if (Model.IsCanAddToShoppCart is true)
                        {
                            <button type="button" data-gameId="@Model.Game.Id" class="btn btn-success btn-lg btn-add-shopcart-js">В Корзину</button>
                        }
                        else
                        {
                            <button type="button" class="btn btn-success  btn-lg" disabled>Нет в наличии</button>
                        }
                    </div>
                }

            </div>
        </div>

        <div class="gamePageInfo mt-3 p-2 borderS">
            <div class="">
                <div class="d-flex flex-wrap">
                    <div class="mtxt">Разработчик: @Model.Game.Developer.Name</div>
                    <div class="mtxt">Дата выхода: @Model.Game.ReleaseDate.ToString("dd.MM.yyyy")</div>
                </div>
            </div>
        </div>

        <div class="gamePageInfo mt-3 p-2 borderS">
            <div class="js-game-platforms">
            </div>
        </div>

        <div class="gamePageInfo mt-3 p-2 borderS">
            <div class="js-game-genres">
            </div>
        </div>

        <div class="gamePageInfo mt-3 p-2 borderS">
            <div class="js-game-lables">
            </div>
        </div>


        <div class="gamePageInfo mt-3 p-2 borderS">
            <div class="text-center">
                <button class="btn btn-outline-danger btn-lg">
                    <i class="fa-solid fa-flag"></i>
                    Сообщить о проблеме
                </button>
            </div>
        </div>

    </div>

    <div class="col-md-9">

        <div class="row singlegame-area mb-3">
            <div class="text-wrap description-text">
                @Model.Game.Description
            </div>
        </div>

        <div class="row js-game-screens">
        </div>

        <div class="row mt-2 singlegame-area mt-3 mb-3">
            <div class="mtxt">
                <h4>Системные требования:</h4>
                <ul class="list-group list-group-flush">
                    <li class="list-group-item">Операционная система: @((Model.Game.Os is null) ? nodata : Model.Game.Os)</li>
                    <li class="list-group-item">Процессор: @((Model.Game.Cpu is null) ? nodata : Model.Game.Cpu) </li>
                    <li class="list-group-item">Видиокарта: @((Model.Game.Gpu is null) ? nodata : Model.Game.Gpu)</li>
                    <li class="list-group-item">Оперативная память: @((Model.Game.Ram is null) ? nodata : Model.Game.Ram)</li>
                    <li class="list-group-item">Занимаймое место на диске: @((Model.Game.Weight is null) ? nodata : Model.Game.Weight)гб</li>
                </ul>
            </div>
        </div>
    </div>
</div>

@* ОТЗЫВЫ ОБ ИГРЕ *@
@await Html.PartialAsync("_Partial.GamePage.Reviews.Index")




<div id="modalWrapper">
</div>

<div id="modalActionWrapper">
    @await Html.PartialAsync("_Partial.GamePage.Modal.Video", Model.Game.YtLinkGameTrailer)
    @await Html.PartialAsync("_Partial.Action.DataNotSaved")
    @await Html.PartialAsync("_Partial.Action.Warning")
    @await Html.PartialAsync("_Partial.Action.Success")
    @await Html.PartialAsync("_Partial.Action.Error")
</div>

<div id="lastActionDataWrapper">
    @await Html.PartialAsync("_Partial.ActionResult", Model.LastAction)
</div>
